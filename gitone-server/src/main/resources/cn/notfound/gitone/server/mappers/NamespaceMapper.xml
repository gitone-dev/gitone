<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.notfound.gitone.server.mappers.NamespaceMapper">
    <resultMap id="namespaceMap" type="cn.notfound.gitone.server.entities.NamespaceEntity">
        <id property="id"  column="id" jdbcType="INTEGER" />
        <result property="createdAt"  column="created_at" jdbcType="TIMESTAMP_WITH_TIMEZONE" />
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP_WITH_TIMEZONE" />
        <result property="type" column="type" jdbcType="INTEGER" />
        <result property="parentId" column="parent_id" jdbcType="INTEGER" />
        <result property="name" column="name" jdbcType="VARCHAR" />
        <result property="path" column="path" jdbcType="VARCHAR" />
        <result property="fullName" column="full_name" jdbcType="VARCHAR" />
        <result property="fullPath" column="full_path" jdbcType="VARCHAR" />
        <result property="visibility" column="visibility" jdbcType="INTEGER" />
        <result property="description" column="description" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="namespaceColumns">
        ns.id,
        ns.created_at,
        ns.updated_at,
        ns.type,
        ns.parent_id,
        ns.name,
        ns.path,
        ns.full_name,
        ns.full_path,
        ns.visibility,
        ns.description
    </sql>
    <sql id="insert">
        INSERT INTO namespaces (
            created_at,
            updated_at,
            type,
            parent_id,
            name,
            path,
            full_name,
            full_path,
            visibility,
            description
        ) VALUES (
            #{createdAt,jdbcType=TIMESTAMP_WITH_TIMEZONE},
            #{updatedAt,jdbcType=TIMESTAMP_WITH_TIMEZONE},
            #{type,jdbcType=INTEGER},
            #{parentId,jdbcType=INTEGER},
            #{name,jdbcType=VARCHAR},
            #{path,jdbcType=VARCHAR},
            #{fullName,jdbcType=VARCHAR},
            #{fullPath,jdbcType=VARCHAR},
            #{visibility,jdbcType=INTEGER},
            #{description,jdbcType=VARCHAR}
        )
    </sql>
    <sql id="update">
        UPDATE namespaces SET
            created_at = #{createdAt,jdbcType=TIMESTAMP_WITH_TIMEZONE},
            updated_at = #{updatedAt,jdbcType=TIMESTAMP_WITH_TIMEZONE},
            type = #{type,jdbcType=INTEGER},
            parent_id = #{parentId,jdbcType=INTEGER},
            name = #{name,jdbcType=VARCHAR},
            path = #{path,jdbcType=VARCHAR},
            full_name = #{fullName,jdbcType=VARCHAR},
            full_path = #{fullPath,jdbcType=VARCHAR},
            visibility = #{visibility,jdbcType=INTEGER},
            description = #{description,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </sql>
    <select id="find" parameterType="java.lang.Integer" resultMap="namespaceMap">
        SELECT <include refid="namespaceColumns" />
        FROM namespaces AS ns
        WHERE ns.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="findByIds" parameterType="java.util.Collection" resultMap="namespaceMap">
        SELECT <include refid="namespaceColumns" />
        FROM namespaces AS ns
        WHERE ns.id IN
        <foreach collection="ids" open="(" item="id" separator="," close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </select>
    <select id="findByFullPath" parameterType="java.lang.String" resultMap="namespaceMap">
        SELECT <include refid="namespaceColumns" />
        FROM namespaces AS ns
        WHERE ns.full_path = #{fullPath,jdbcType=VARCHAR}
    </select>
    <insert id="create" parameterType="cn.notfound.gitone.server.entities.NamespaceEntity" keyProperty="id" useGeneratedKeys="true" >
        <include refid="insert" />
    </insert>
    <update id="update" parameterType="cn.notfound.gitone.server.entities.NamespaceEntity">
        <include refid="update" />
    </update>
    <delete id="delete" parameterType="cn.notfound.gitone.server.entities.NamespaceEntity">
        DELETE FROM namespaces
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>
