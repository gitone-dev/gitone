allprojects {
    def central_uri = new URI('https://maven.aliyun.com/repository/central')
    def jcenter_uri = new URI('https://maven.aliyun.com/repository/public')
    def gradle_uri = new URI("https://maven.aliyun.com/repository/gradle-plugin")

    repositories {
        configureEach {
            ArtifactRepository repo ->
            if (repo instanceof MavenArtifactRepository) {
                def url = repo.url.toString()
                if (url.startsWith('https://repo.maven.apache.org/maven2/') || url.startsWith('https://repo1.maven.org/maven2')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by ${central_uri}."
                    repo.setUrl(central_uri)
                } else if (url.startsWith('https://jcenter.bintray.com/')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by ${jcenter_uri}."
                    repo.setUrl(jcenter_uri)
                } else if (url.startsWith('https://plugins.gradle.org/')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by ${gradle_uri}."
                    repo.setUrl(gradle_uri)
                }
            }
        }
    }

    buildscript {
        repositories {
            maven { url 'https://maven.aliyun.com/repository/public/' }
            configureEach { ArtifactRepository repo ->
                if (repo instanceof MavenArtifactRepository) {
                    def url = repo.url.toString()
                    if (url.startsWith('https://repo.maven.apache.org/maven2/') || url.startsWith('https://repo1.maven.org/maven2')) {
                        project.logger.lifecycle "Repository ${repo.url} replaced by ${central_uri}."
                        repo.setUrl(central_uri)
                    } else if (url.startsWith('https://jcenter.bintray.com/')) {
                        project.logger.lifecycle "Repository ${repo.url} replaced by ${jcenter_uri}."
                        repo.setUrl(jcenter_uri)
                    } else if (url.startsWith('https://plugins.gradle.org/')) {
                        project.logger.lifecycle "Repository ${repo.url} replaced by ${gradle_uri}."
                        repo.setUrl(gradle_uri)
                    }
                }
            }
        }
    }
}
